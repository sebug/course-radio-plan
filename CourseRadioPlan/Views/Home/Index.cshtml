@model HomeViewModel
@{
    ViewData["Title"] = "Home Page";
    ViewData["ShowChrome"] = this.Model.RadioPlan == null;
}
@if (this.Model.RadioPlan != null)
{
    <style>

        body {
            line-height: 1;
            font-size: 8px;
        }

        table.radio-plan {
            width: 350px;
        }
    </style>
    @if (this.Model.RadioPlan.UseSVG)
    {
        <style>
            svg.radio-container {
                width: 28.5cm;
                height: 20cm;
            }
            rect.plan-placeholder {
                fill-opacity: 0;
                
            }
            foreignObject.plan-object {
            }
        </style>
        <svg class="radio-container" viewBox="0 0 2850 2000">
            <rect x="0" y="0" width="950" height="1000" class="plan-placeholder"></rect>
            <foreignObject x="0" y="0" width="950" height="1000" class="plan-object">
                @await Html.PartialAsync("~/Views/Home/RadioPlan.cshtml", this.Model.RadioPlan)
            </foreignObject>
            <rect x="950" y="0" width="950" height="1000" class="plan-placeholder"></rect>
            <foreignObject x="950" y="0" width="950" height="1000" class="plan-object">
                @await Html.PartialAsync("~/Views/Home/RadioPlan.cshtml", this.Model.RadioPlan)
            </foreignObject>
            <rect x="1900" y="0" width="950" height="1000" class="plan-placeholder"></rect>
            <foreignObject x="1900" y="0" width="950" height="1000" class="plan-object">
                @await Html.PartialAsync("~/Views/Home/RadioPlan.cshtml", this.Model.RadioPlan)
            </foreignObject>
            <rect x="0" y="1000" width="950" height="1000" class="plan-placeholder"></rect>
            <foreignObject x="0" y="1000" width="950" height="1000" class="plan-object">
                @await Html.PartialAsync("~/Views/Home/RadioPlan.cshtml", this.Model.RadioPlan)
            </foreignObject>
            <rect x="950" y="1000" width="950" height="1000" class="plan-placeholder"></rect>
            <foreignObject x="950" y="1000" width="950" height="1000" class="plan-object">
                @await Html.PartialAsync("~/Views/Home/RadioPlan.cshtml", this.Model.RadioPlan)
            </foreignObject>
            <rect x="1900" y="1000" width="950" height="1000" class="plan-placeholder"></rect>
            <foreignObject x="1900" y="1000" width="950" height="1000" class="plan-object">
                @await Html.PartialAsync("~/Views/Home/RadioPlan.cshtml", this.Model.RadioPlan)
            </foreignObject>
        </svg>
    }
    else
    {
        <div class="container">
            <div class="row">
                <div class="col-md-4">@await Html.PartialAsync("~/Views/Home/RadioPlan.cshtml", this.Model.RadioPlan)</div>
                <div class="col-md-4">@await Html.PartialAsync("~/Views/Home/RadioPlan.cshtml", this.Model.RadioPlan)</div>
                <div class="col-md-4">@await Html.PartialAsync("~/Views/Home/RadioPlan.cshtml", this.Model.RadioPlan)</div>
            </div>
            <div class="row">
                <div class="col-md-4">@await Html.PartialAsync("~/Views/Home/RadioPlan.cshtml", this.Model.RadioPlan)</div>
                <div class="col-md-4">@await Html.PartialAsync("~/Views/Home/RadioPlan.cshtml", this.Model.RadioPlan)</div>
                <div class="col-md-4">@await Html.PartialAsync("~/Views/Home/RadioPlan.cshtml", this.Model.RadioPlan)</div>
            </div>
        </div>
        }
    }
else
{
    <h1>Course Radio Plan</h1>
    <p>Upload a file below from which the A4 sheet should be created.</p>

    <form method="post" enctype="multipart/form-data">
        <input type="file" name="ExcelFile" />

        <button type="submit">Submit</button>
    </form>

}

